C51 COMPILER V9.57.0.0   MAIN                                                              09/08/2019 21:30:35 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\keil\install\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          /**********************BST-V51实验开发板例程************************
   3          *  平台：BST-V51 + Keil U5 + STC89C52
   4          *  名称：LCD1602模块实验
   5          *  公司：深圳市亚博智能科技有限公司
   6          *  修改日期：2019-9-8
   7          *  晶振:11.0592MHZ
   8          *  说明：免费开源，不提供源代码分析
   9          *        ZhangHJ于2019-9-8进行测试,并修改部分代码注释
  10          *******************************************************************/
  11          
  12          /**********************实验测试程序*********************************
  13          *  平台：BST-V51 + Keil U5 + STC89C52RC
  14          *  名称：液晶1602显示屏实验
  15          *  日期：2019-9-8
  16          *  姓名：ZhangHJ
  17          *  内容：通过标准程序静态显示字符
  18          *  引脚定义如下：1-VSS 2-VDD 3-V0 4-RS 5-R/W 6-E 7-14 DB0-DB7 15-BLA 16-BLK
  19          ********************************************************************/
  20          
  21          #include<reg52.h> //包含头文件，一般情况不需要改动，头文件包含特殊功能寄存器的定义
  22          #include<intrins.h>
  23          
  24          sbit RS = P1^0;   //定义端口
  25          sbit RW = P1^1;
  26          sbit EN = P2^5;
  27          sbit DU = P2^0;   //重新进行段选和位选地址的定义
  28          sbit WE = P2^1;
  29          
  30          #define RS_CLR RS=0
  31          #define RS_SET RS=1
  32          
  33          #define RW_CLR RW=0
  34          #define RW_SET RW=1
  35          
  36          #define EN_CLR EN=0
  37          #define EN_SET EN=1
  38          
  39          #define DataPort P0 //定义数据端口
  40          
  41          
  42          /**********************************************************
  43          *  函数名称：关数码管点阵函数
  44          *  修改日期：2019-9-8
  45          *  修改人：ZhangHJ
  46          *  说明：段选关闭所有数码管数据段
  47          ***********************************************************/
  48          void cmg88()    //关数码管，点阵函数
  49          {
  50   1        P0=0X00;
  51   1        DU=1;
  52   1        DU=0;
  53   1      }
  54          
C51 COMPILER V9.57.0.0   MAIN                                                              09/08/2019 21:30:35 PAGE 2   

  55          
  56          
  57          /**********************************************************
  58          *  函数名称：微秒延时函数
  59          *  修改日期：2019-9-8
  60          *  修改人：ZhangHJ
  61          *  说明：uS延时函数，含有输入参数 unsigned char t,无返回值
  62          *        unsigned char 是定义无符号字符变量,其值的范围是
  63          *        0~255 这里使用晶振12M,精确延时请使用汇编,大致延时
  64          *        长度如下 T=tx2+5 uS
  65          ***********************************************************/
  66          void DelayUs2x(unsigned char t)
  67          {
  68   1        while(--t);
  69   1      }
  70          
  71          
  72          
  73          /**********************************************************
  74          *  函数名称：毫秒延时函数
  75          *  修改日期：2019-9-8
  76          *  修改人：ZhangHJ
  77          *  说明：mS延时函数,含有输入参数 unsigned char t,无返回值
  78          *        unsigned char 是定义无符号字符变量,其值的范围是
  79          *        0~255 这里使用晶振12M,精确延时请使用汇编
  80          ***********************************************************/
  81          void DelayMs(unsigned char t)
  82          {
  83   1        while(t--)
  84   1        {
  85   2          //大致延时1mS
  86   2          DelayUs2x(245);
  87   2          DelayUs2x(245);
  88   2        }
  89   1      }
  90          
  91          
  92          
  93          /**********************************************************
  94          *  函数名称：判断1602液晶屏是否繁忙函数
  95          *  修改日期：2019-9-8
  96          *  修改人：ZhangHJ
  97          *  说明：对液晶屏进行操作前,必须首先进行液晶屏当前是否繁忙的读写检测
  98          *        返回值为 1 --> 禁止读写
  99          *                 0 --> 允许读写
 100          ***********************************************************/
 101          bit LCD_Check_Busy(void) 
 102          {
 103   1        DataPort = 0xFF;      //数据端口赋值 1111 1111
 104   1        RS_CLR;               //RS --> 0
 105   1        RW_SET;               //RW --> 1
 106   1        EN_CLR;               //EN --> 0
 107   1        _nop_();              //等待
 108   1        EN_SET;               //EN --> 1
 109   1        return (bit)(DataPort & 0x80);
 110   1      }
 111          
 112          
 113          
 114          /**********************************************************
 115          *  函数名称：命令写入函数
 116          *  修改日期：2019-9-8
C51 COMPILER V9.57.0.0   MAIN                                                              09/08/2019 21:30:35 PAGE 3   

 117          *  修改人：ZhangHJ
 118          *  说明：向1602写入命令com
 119          *        首先判断1602是否允许写入,禁止写入则进行等待
 120          *        
 121          ***********************************************************/
 122          void LCD_Write_Com(unsigned char com) 
 123          {
 124   1        while(LCD_Check_Busy());  //忙则等待
 125   1        RS_CLR;                   //RS --> 0
 126   1        RW_CLR;                   //RW --> 0
 127   1        EN_SET;                   //EN --> 1
 128   1        DataPort = com;           //命令赋值到数据端口
 129   1        _nop_();                  //等待
 130   1        EN_CLR;                   //EN --> 0
 131   1      }
 132          
 133          
 134          
 135          /**********************************************************
 136          *  函数名称：数据写入函数
 137          *  修改日期：2019-9-8
 138          *  修改人：ZhangHJ
 139          *  说明：向1602写入数据Data
 140          *        首先判断1602是否允许写入,禁止写入则进行等待
 141          *        
 142          ***********************************************************/
 143          void LCD_Write_Data(unsigned char Data)
 144          {
 145   1        while(LCD_Check_Busy());  //忙则等待
 146   1        RS_SET;                   //RS --> 1
 147   1        RW_CLR;                   //RW --> 0
 148   1        EN_SET;                   //EN --> 1
 149   1        DataPort = Data;          //命令赋值到数据端口
 150   1        _nop_();                  //等待
 151   1        EN_CLR;                   //EN --> 0
 152   1      }
 153          
 154          
 155          
 156          /**********************************************************
 157          *  函数名称：清屏函数
 158          *  修改日期：2019-9-8
 159          *  修改人：ZhangHJ
 160          *  说明：将1602清屏
 161          *        调用命令写入函数,写入01H命令,延时等待5ms
 162          *        命令详见1602资料4.2.4节
 163          ***********************************************************/
 164          void LCD_Clear(void)
 165          {
 166   1        LCD_Write_Com(0x01);
 167   1        DelayMs(5);
 168   1      }
 169          
 170          
 171          
 172          /**********************************************************
 173          *  函数名称：字符串写入函数
 174          *  修改日期：2019-9-8
 175          *  修改人：ZhangHJ
 176          *  说明：将在第 y 行, x 列写入字符串 s
 177          *        首先设置数据地址指针,之后按位逐位写入字符串数据
 178          *        命令详见1602资料4.2.1节
C51 COMPILER V9.57.0.0   MAIN                                                              09/08/2019 21:30:35 PAGE 4   

 179          ***********************************************************/
 180          void LCD_Write_String(unsigned char x,unsigned char y,unsigned char *s)
 181          {
 182   1        //1. 设置数据地址指针
 183   1        if (y == 0)//表示第一行
 184   1        {
 185   2          LCD_Write_Com(0x80 + x);    //第一行起始地址0x80 + 数据偏移地址
 186   2        }
 187   1        else//表示第二行
 188   1        {
 189   2          LCD_Write_Com(0xC0 + x);    //第二行起始地址0xC0 + 数据偏移地址
 190   2        }
 191   1        
 192   1        //2. 逐位写入字符串数据
 193   1        while(*s)
 194   1        {
 195   2          LCD_Write_Data(*s);
 196   2          s ++;
 197   2        }
 198   1      }
 199          
 200          
 201          
 202          /**********************************************************
 203          *  函数名称：字符写入函数
 204          *  修改日期：2019-9-8
 205          *  修改人：ZhangHJ
 206          *  说明：将在第 y 行, x 列写入字符 s
 207          *        首先设置数据地址指针,之后按位逐位写入字符串数据
 208          *        命令详见1602资料4.2.1节
 209          ***********************************************************/
 210          void LCD_Write_Char(unsigned char x,unsigned char y,unsigned char Data)
 211          {
 212   1        //1. 设置数据地址指针
 213   1        if (y == 0)                 //表示第一行
 214   1        {
 215   2          LCD_Write_Com(0x80 + x);  //第一行起始地址0x80 + 数据偏移地址
 216   2        }
 217   1        else                        //表示第二行
 218   1        {
 219   2          LCD_Write_Com(0xC0 + x);  //第二行起始地址0xC0 + 数据偏移地址
 220   2        }
 221   1        
 222   1        //2. 逐位写入字符串数据
 223   1        LCD_Write_Data(Data);
 224   1      }
 225          
 226          
 227          
 228          /**********************************************************
 229          *  函数名称：1602液晶屏初始化函数
 230          *  修改日期：2019-9-8
 231          *  修改人：ZhangHJ
 232          *  说明：1602液晶屏初始化
 233          *        命令详见1602资料5节
 234          ***********************************************************/
 235          void LCD_Init(void)
 236          {
 237   1        LCD_Write_Com(0x38);    /*显示模式设置*/
 238   1        DelayMs(5);
 239   1        LCD_Write_Com(0x38);
 240   1        DelayMs(5);
C51 COMPILER V9.57.0.0   MAIN                                                              09/08/2019 21:30:35 PAGE 5   

 241   1        LCD_Write_Com(0x38);
 242   1        DelayMs(5);
 243   1        LCD_Write_Com(0x38);
 244   1        LCD_Write_Com(0x08);    /*显示关闭*/
 245   1        LCD_Write_Com(0x01);    /*显示清屏*/
 246   1        LCD_Write_Com(0x06);    /*显示光标移动设置*/
 247   1        DelayMs(5);
 248   1        LCD_Write_Com(0x0C);    /*显示开及光标设置*/
 249   1      }
 250          
 251          
 252          
 253          /**********************************************************
 254          *  函数名称：1602液晶屏测试主函数
 255          *  修改日期：2019-9-8
 256          *  修改人：ZhangHJ
 257          *  说明：1602液晶屏字符和字符串写入测试
 258          *        
 259          ***********************************************************/
 260          void main(void)
 261          {
 262   1        cmg88();                //关数码管，点阵函数
 263   1        LCD_Init();             //初始化
 264   1        LCD_Clear();            //清屏
 265   1        while (1)
 266   1        {
 267   2      //    LCD_Write_Char(7,0,'o');
 268   2      //    LCD_Write_Char(8,0,'k');
 269   2          LCD_Write_String(2,0,"Zhang HouJin");
 270   2          LCD_Write_String(2,1,"Hello World!");
 271   2          while(1);
 272   2        }
 273   1      }
 274          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    233    ----
   CONSTANT SIZE    =     26    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
